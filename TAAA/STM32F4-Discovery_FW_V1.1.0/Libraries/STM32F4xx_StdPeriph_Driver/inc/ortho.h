#ifndef __ORTHO_H__
#define __ORTHO_H__
typedef struct {
			float g;
			float t;
			float pii;
			float wb0;
			float half;
			float full;
			float k1;
			float k2;
			float k3;
			float k4;
			float amp1;
			float input1ex;
			float hold1;
			float output1;
			float input2;
			float hold2;
			float output2;
			float volt1;
			float input1;
			float vk1;
			float vk3;
		  float vsum;
			float v;
			float qv;
			float i;
			float qi;
			float vk4;
			float w;
			float wh;
			float x;
			float y;
			float z;
			float zz;
			float zzz;
			float a1;
			float a2;
			float b0;
			float errV_postF;
			float errV;
			float errI_postF;
			float errI;
			float inputV[3];
			float outputVD[3];
			float outputVQ[3];
			float inputI[3];
			float outputID[3];
			float outputIQ[3];
			void (*cal)();
			} ORTHO ;
typedef ORTHO *ORTHO_handle;
#define ORTHO_DEFAULTS		{1, \
							 0.0002, \
							 3.141592654, \
							 0,	\
							 0, \
							 0, \
							 0, \
							 0, \
							 0, \
							 0, \
							 0,	\
							 0,	\
							 0,	\
						   0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,	\
							 0,0,0,0,0,0,0,0,0,0,0,0, \
							 {0,0,0}, \
							 {0,0,0}, \
							 {0,0,0}, \
							 {0,0,0}, \
							 {0,0,0}, \
							 {0,0,0}, \
							 (void (*)(uint32_t))ortho_cal, \
							 }
void ortho_cal(ORTHO_handle);
#endif
